generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(uuid())
  login     String
  password  String
  version   Int @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Album {
  id        String @id @default(uuid())
  name      String
  year      Int
  artistId  String?
  artist    Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  tracks    Track[]
  favourite FavouriteAlbum?
}

model Artist {
  id     String  @id @default(uuid())
  name   String
  grammy Boolean @default(false)
  albums Album[]
  tracks Track[]
  favourite FavouriteArtist?
}

model Track {
  id       String  @id @default(uuid())
  name     String
  duration Int
  artistId String?
  artist   Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  albumId  String?
  album    Album?  @relation(fields: [albumId], references: [id], onDelete: SetNull)
  favourite FavouriteTrack?
}

model FavouriteAlbum {
  id      String @id @default(uuid())
  albumId String @unique
  album   Album @relation(fields: [albumId], references: [id], onDelete: Cascade)
}

model FavouriteArtist {
  id       String @id @default(uuid())
  artistId String @unique
  artist   Artist @relation(fields: [artistId], references: [id], onDelete: Cascade)
}

model FavouriteTrack {
  id      String @id @default(uuid())
  trackId String @unique
  track   Track @relation(fields: [trackId], references: [id], onDelete: Cascade)
}